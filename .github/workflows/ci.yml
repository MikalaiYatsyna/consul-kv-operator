name: Build Docker image and Helm Chart

on:
    push:
        branches: [ "master" ]
    pull_request:
        branches: [ "master" ]
    workflow_run:
        workflows:
            - Build

permissions:
    contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup helm
      uses: azure/setup-helm@v3
      with:
          version: v3.5.0

    - name: Init version
      id: version
      run: |
          if [ "$EVENT" == 'pull_request' ]
          then
            echo "::set-output name=version::$(echo 1.0.0-${{github.event.pull_request.head.sha}} | cut -c1-13)"
          elif [ "$EVENT" == 'workflow_run' ]
          then
            echo "::set-output name=version::$(echo 1.0.0-${{github.event.workflow_run.head_sha}} | cut -c1-13)"
          else
            echo "::set-output name=version::$(echo 1.0.0-$GITHUB_SHA | cut -c1-13 )"
          fi
      env:
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}

    - name: Packer init
      uses: hashicorp/packer-github-actions@master
      with:
          command: init
          working_directory: .
      env:
          PACKER_LOG: 1

    - name: Packer validate
      uses: hashicorp/packer-github-actions@master
      with:
        command: validate
        arguments: -var image_tag=${{ steps.version.outputs.version }}
        working_directory: .
      env:
        PACKER_LOG: 1

    - name: Build docker image
      uses: hashicorp/packer-github-actions@master
      with:
        command: build
        arguments: -var image_tag=${{ steps.version.outputs.version }}
        working_directory: .
      env:
        PACKER_LOG: 1

    - name: Update Helm chart version
      run: yq -i '.version = "${{ steps.version.outputs.version }}"' ./ci/helm/Chart.yaml

    - name: Helm Lint
      run: helm lint ./helm

    - name: Helm template
      run: helm template ./helm

    - name: Save chart
      run: helm chart save ./ci/helm ${{ github.repository }}:${{ steps.version.outputs.version }}
      env:
          HELM_EXPERIMENTAL_OCI: 1
